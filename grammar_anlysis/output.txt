CONSTTK const
CHARTK char
IDENFR XX
ASSIGN =
CHARCON +
<常量定义>
SEMICN ;
CONSTTK const
CHARTK char
IDENFR XU
ASSIGN =
CHARCON *
<常量定义>
SEMICN ;
CONSTTK const
CHARTK char
IDENFR X
ASSIGN =
CHARCON 6
<常量定义>
SEMICN ;
CONSTTK const
INTTK int
IDENFR a
ASSIGN =
MINU -
INTCON 1
<无符号整数>
<整数>
<常量定义>
SEMICN ;
CONSTTK const
INTTK int
IDENFR b
ASSIGN =
PLUS +
INTCON 2
<无符号整数>
<整数>
<常量定义>
SEMICN ;
<常量说明>
INTTK int
IDENFR ifprime
<声明头部>
LPARENT (
INTTK int
IDENFR number
<参数表>
RPARENT )
LBRACE {
CONSTTK const
CHARTK char
IDENFR ZZZ
ASSIGN =
CHARCON z
<常量定义>
SEMICN ;
CONSTTK const
INTTK int
IDENFR NEWAS_7235
ASSIGN =
INTCON 129
<无符号整数>
<整数>
<常量定义>
SEMICN ;
<常量说明>
INTTK int
IDENFR root
COMMA ,
IDENFR test
<变量定义>
SEMICN ;
<变量说明>
IDENFR root
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR test
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IFTK if
LPARENT (
IDENFR number
<因子>
<项>
<表达式>
GEQ >=
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
ELSETK else
LBRACE {
IDENFR root
ASSIGN =
IDENFR number
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
FORTK for
LPARENT (
IDENFR test
ASSIGN =
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR test
<因子>
<项>
<表达式>
EQL ==
IDENFR root
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR test
ASSIGN =
IDENFR test
PLUS +
INTCON 102310
<无符号整数>
<步长>
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR number
<因子>
DIV /
IDENFR test
<因子>
<项>
<表达式>
EQL ==
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
RETURNTK return
LPARENT (
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
RETURNTK return
LPARENT (
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
INTTK int
IDENFR minus
<声明头部>
LPARENT (
INTTK int
IDENFR numberA
COMMA ,
INTTK int
IDENFR numberB
<参数表>
RPARENT )
LBRACE {
INTTK int
IDENFR difference
<变量定义>
SEMICN ;
<变量说明>
IDENFR difference
ASSIGN =
IDENFR numberA
<因子>
<项>
MINU -
IDENFR numberB
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IFTK if
LPARENT (
IDENFR difference
<因子>
<项>
<表达式>
GRE >
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
MINU -
IDENFR difference
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
ELSETK else
LBRACE {
IFTK if
LPARENT (
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
IDENFR difference
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
ELSETK else
LBRACE {
RETURNTK return
LPARENT (
MINU -
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
RETURNTK return
LPARENT (
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR startnumber
<变量定义>
SEMICN ;
INTTK int
IDENFR endnumber
COMMA ,
IDENFR a
COMMA ,
IDENFR b
<变量定义>
SEMICN ;
INTTK int
IDENFR primearray
LBRACK [
INTCON 1000
<无符号整数>
RBRACK ]
<变量定义>
SEMICN ;
<变量说明>
IDENFR startnumber
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR endnumber
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR a
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR b
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON Please input a number that end the array.
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
SCANFTK scanf
LPARENT (
IDENFR endnumber
RPARENT )
<读语句>
SEMICN ;
<语句>
FORTK for
LPARENT (
IDENFR a
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR startnumber
<因子>
<项>
<表达式>
GRE >
IDENFR endnumber
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR startnumber
ASSIGN =
IDENFR startnumber
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR ifprime
LPARENT (
IDENFR startnumber
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
EQL ==
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR a
ASSIGN =
IDENFR a
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR primearray
LBRACK [
IDENFR a
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR startnumber
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
FORTK for
LPARENT (
IDENFR b
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR b
<因子>
<项>
<表达式>
LSS <
IDENFR a
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR b
ASSIGN =
IDENFR b
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON %d 
<字符串>
COMMA ,
IDENFR primearray
LBRACK [
IDENFR b
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
PRINTFTK printf
LPARENT (
STRCON \n
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
WHILETK while
LPARENT (
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
FORTK for
LPARENT (
IDENFR b
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR b
<因子>
<项>
<表达式>
LEQ <=
IDENFR a
<因子>
<项>
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR b
ASSIGN =
IDENFR b
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
IDENFR primearray
LBRACK [
IDENFR b
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR minus
LPARENT (
IDENFR primearray
LBRACK [
IDENFR b
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
COMMA ,
IDENFR primearray
LBRACK [
IDENFR b
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON %d 
<字符串>
COMMA ,
IDENFR primearray
LBRACK [
IDENFR b
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
PRINTFTK printf
LPARENT (
STRCON \n
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON %d 
<字符串>
COMMA ,
IDENFR primearray
LBRACK [
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON \n
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
IFTK if
LPARENT (
IDENFR b
<因子>
<项>
<表达式>
NEQ !=
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
RETURNTK return
<返回语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
IDENFR a
ASSIGN =
IDENFR a
<因子>
<项>
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
RETURNTK return
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<主函数>
<程序>
